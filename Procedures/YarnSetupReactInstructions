https://scotch.io/tutorials/setup-a-react-environment-using-webpack-and-babel

1. Install Yarn

2. Create a folder for the application and initialize with yarn init

3. Install webpack and dependencies with the command 
yarn add webpack webpack-dev-server path

4. Create a webpack.config.js file with the following content:



const path = require('path');

const HtmlWebpackPlugin = require('html-webpack-plugin');

const HtmlWebpackPluginConfig = new HtmlWebpackPlugin({

template: './client/index.html',

filename: 'index.html',

inject: 'body'

})

module.exports = {

entry: './client/index.js',

output: {

path: path.resolve('dist'),

filename: 'index_bundle.js'

},

module: {

loaders: [

{ test: /\.js$/, loader: 'babel-loader', exclude: /node_modules/ },

{ test: /\.jsx$/, loader: 'babel-loader', exclude: /node_modules/ }

]

},

plugins: [HtmlWebpackPluginConfig]

}



5. Set up babel with the following command yarn add babel-loader babel-core babel-preset-es2015 babel-preset-react --dev



6. Create a file named .babelrc and add the content:



{

"presets":[

"es2015", "react"

]

}



7. Create a folder named client and add two files named index.js and index.html and use the following contents:



//index.js

import React from 'react';

import ReactDOM from 'react-dom';

import App from './components/App.jsx';

ReactDOM.render(<App />, document.getElementById('root'));





//index.html

<!DOCTYPE html>

<html>

<head>

<meta charset="utf-8">

<title>React App Setup</title>

</head>

<body>

<div id="root">

Sample Application

</div>

</body>

</html>



8. Add the html webpack plugin with the following command yarn add html-webpack-plugin



9. Create a package.json file in the root and use the following content:



{

"name": "sampleApp",

"version": "1.0.0",

"main": "index.js",

"license": "MIT",

"scripts": {

"start": "webpack-dev-server"

},

"dependencies": {

"html-webpack-plugin": "^2.30.1",

"path": "^0.12.7",

"react": "^16.1.1",

"react-dom": "^16.1.1",

"webpack": "^3.8.1",

"webpack-dev-server": "^2.9.4"

},

"devDependencies": {

"babel-core": "^6.26.0",

"babel-loader": "^7.1.2",

"babel-preset-es2015": "^6.24.1",

"babel-preset-react": "^6.24.1"

}

}



10. Install react with the following command: yarn add react react-dom



11. Create a component folder and create a file App.jsx and use the contents:



import React from 'react';

export default class App extends React.Component {

render() {

return (

<div style={{textAlign: 'center'}}>

<h1>Hello World</h1>

</div>);

}

}
